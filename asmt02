#!/bin/bash
# /asmt02/asmt02  cs260 assignment 02
# set variables
iteration= 
ps_total=0
is_used=
pct_in_use=

#report header
printf "DATE/TIME\t#PROCS\t#USERS\t#REMOTE\tXUSER?\tLOADAV\n" tee -a logfile

# loop
while sleep 5 ; do

#log keeps track of these variables

	time_stamp=$(date +%m%d%H%M)
	nbr_of_ps=$(ps af | wc -l)
	nbr_of_users=$(who | sort | uniq -w8 | wc -l) 
	nbr_of_remote=$(who | sort | uniq -w8 | grep -v '147.144' | wc -l)
	nbr_of_Xusers=$(who|sort|uniq -w8|grep '(:0)'|wc -l)
	# I don't need number of Xusers - I need a boolian True or False
	load_15m=$(uptime | cut -d, -f4)

# Math stuff
	((iteration++))
	ps_total=$(($ps_total+$nbr_of_ps))

	if [ $nbr_of_users -ge 0 ]
	 	then
		((is_used++))
		fi
# columns in log file
# DATE/TIME	#PROCS	#USERS	#REMOTE	XUSER?	LOADAV
	printf "$time_stamp\t$nbr_of_ps\t$nbr_of_users\t$nbr_of_remote\t$nbr_of_Xusers\t$load_15m\n" | tee -a logfile
	echo $is_used

# math calculations - could go in backtic

prct_used=$(echo "scale=2; $is_used*100/$iteration"| bc)
avg_ps_level=$(echo "scale=4; $ps_total/$iteration"| bc)

echo "SUMMARY: $prct_used percent of samples found users logged on"
echo "AVERAGE of $avg_ps_level processes were running over $iteration measurements"

done
# example of how report is supposed to look
# 09252020: SUMMARY: 100% of samples found users logged in.
# 09252020: an AVERAGE of 237 processes were running over 5 measurements